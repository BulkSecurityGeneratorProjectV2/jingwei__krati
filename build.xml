<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="krati" default="main" basedir=".">
    <property name="project.name" value="krati"/>
    <property name="krati.root" location="."/>

    <property file="${krati.root}/version.properties"/>

    <property name="logs.dir" value="logs"/>
    <property name="build.dir" value="build"/>
    <property name="config.dir" value="config"/>
    <property name="jar.dir" value="${build.dir}/jar"/>
    <property name="jar.file" value="${jar.dir}/${project.name}-${version}.jar"/>
    <property name="classes.dir"  value="${build.dir}/classes"/>
    
    <property name="ivy.jar.dir" value="${basedir}/ivy"/>
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar"/>
    <property name="ivy.install.version" value="2.0.0-beta1"/>
    
    <property name="lib.dir" value="lib"/>
    <property name="src.dir" value="src"/>
    <property name="cds.src.dir" value="cds/src"/>
    <property name="sos.src.dir" value="sos/src"/>
    
    <property name="test.dir" value="test"/>
    <property name="test.lib.dir" value="${test.dir}/lib"/>
    <property name="test.src.dir" value="${test.dir}/src"/>
    <property name="test.build.dir" value="${test.dir}/classes"/>
    
    <property name="tests.to.run" value="TestDataCache"/>
    
    <path id="compile.class.path">
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>
    
    <path id="test.compile.class.path">
        <fileset dir="${test.lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>
    
    <path id="java.class.path">
        <dirset dir="${classes.dir}">
            <include name="**"/>
        </dirset>
    </path>
    
    <path id="test.class.path">
        <dirset dir="${test.build.dir}">
            <include name="**"/>
        </dirset>
    </path>
    
    <target name="download-ivy" unless="skip.download">
    <mkdir dir="${ivy.jar.dir}"/>
        <echo message="installing ivy..."/>
        <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>
    
    <target name="install-ivy" depends="download-ivy">
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>
    
    <target name="resolve" depends="install-ivy">
        <ivy:retrieve/>
    </target>
    
    <target name="clean">
      <delete dir="${build.dir}"/>
      <delete dir="${logs.dir}"/>
      <delete dir="${test.build.dir}"/>
    </target>
    
    <target name="init" depends="resolve">
        <mkdir dir="${logs.dir}"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${classes.dir}"/>
    </target>
    
    <target name="compile.krati" depends="init">
        <javac debug="true" destdir="${classes.dir}">
            <src path="${src.dir}"/>
            <classpath refid="compile.class.path"/>
        </javac>
    </target>
    
    <target name="compile.cds" depends="compile.krati">
        <javac debug="true" destdir="${classes.dir}">
            <src path="${cds.src.dir}/api"/>
            <src path="${cds.src.dir}/impl"/>
            <classpath refid="java.class.path"/>
            <classpath refid="compile.class.path"/>
        </javac>
    </target>
    
    <target name="compile.sos" depends="compile.cds">
        <javac debug="true" destdir="${classes.dir}">
            <src path="${sos.src.dir}"/>
            <classpath refid="java.class.path"/>
            <classpath refid="compile.class.path"/>
        </javac>
    </target>
    
    <target name="compile" depends="init" description="-- compile source">
        <javac debug="true" destdir="${classes.dir}">
            <src path="${src.dir}"/>
            <src path="${cds.src.dir}/api"/>
            <src path="${cds.src.dir}/impl"/>
            <src path="${sos.src.dir}"/>
            <classpath refid="compile.class.path"/>
        </javac>
        <copy todir="${classes.dir}">
            <fileset dir="${config.dir}"/>
        </copy>
    </target>
    
    <target name="jar" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.file}" basedir="${classes.dir}"/>
    </target>
    
    <target name="test.clean" description="-- clean test results">
      <delete dir="${logs.dir}"/>
      <delete dir="${test.build.dir}"/>
      <delete dir="${test.dir}/cache"/>
      <delete dir="${test.dir}/output"/>
    </target>
    
    <target name="test.init" depends="compile">
        <mkdir dir="${test.build.dir}"/>
    </target>
    
    <target name="test.compile" depends="test.init">
        <javac debug="true" destdir="${test.build.dir}">
            <src path="${test.src.dir}"/>
            <classpath refid="java.class.path"/>
            <classpath refid="compile.class.path"/>
            <classpath refid="test.compile.class.path"/>
        </javac>
        <copy todir="${test.build.dir}">
            <fileset dir="${config.dir}"/>
        </copy>
    </target>
    
    <target name="test" depends="test.compile" description="-- run regression (30 seconds per test)">
        <junit maxmemory="16G">
            <jvmarg value="-Dtest.idStart=0"/>
            <jvmarg value="-Dtest.idCount=500000"/>
            <jvmarg value="-Dtest.segFileSizeMB=128"/>
            <jvmarg value="-Dtest.runTimeSeconds=30"/>
            <jvmarg value="-Dtest.dir=${test.dir}"/>
            <jvmarg value="-Dtest.output.dir=${test.dir}/output"/>
            <formatter type="brief" usefile="false"/>
            
            <classpath>
                <path refid="test.class.path"/>
                <path refid="java.class.path"/>
                <path refid="compile.class.path"/>
                <path refid="test.compile.class.path"/>
            </classpath>
            
            <batchtest fork="yes">
                <fileset dir="${test.build.dir}" includes="**/Test*.class" excludes="**/Test*er.class"/>
            </batchtest>
        </junit>
    </target>
    
    <target name="test.stress" depends="test.compile" description="-- run regression (30 minutes per test)">
        <junit maxmemory="16G">
            <jvmarg value="-Dtest.idStart=0"/>
            <jvmarg value="-Dtest.idCount=5000000"/>
            <jvmarg value="-Dtest.segFileSizeMB=256"/>
            <jvmarg value="-Dtest.runTimeSeconds=1800"/>
            <jvmarg value="-Dtest.dir=${test.dir}"/>
            <jvmarg value="-Dtest.output.dir=${test.dir}/output"/>
            <formatter type="brief" usefile="false"/>
            
            <classpath>
                <path refid="test.class.path"/>
                <path refid="java.class.path"/>
                <path refid="compile.class.path"/>
                <path refid="test.compile.class.path"/>
            </classpath>
            
            <batchtest fork="yes">
                <fileset dir="${test.build.dir}" includes="**/Test*.class" excludes="**/Test*er.class"/>
            </batchtest>
        </junit>
    </target>

    <target name="regress.cache" depends="test.compile" description="-- regress DataCache for memory/mapped/channel (30 minutes per test)">
        <junit maxmemory="16G">
            <jvmarg value="-Dtest.idStart=0"/>
            <jvmarg value="-Dtest.idCount=5000000"/>
            <jvmarg value="-Dtest.segFileSizeMB=256"/>
            <jvmarg value="-Dtest.runTimeSeconds=1800"/>
            <jvmarg value="-Dtest.dir=${test.dir}"/>
            <jvmarg value="-Dtest.output.dir=${test.dir}/output"/>
            <formatter type="brief" usefile="false"/>
            
            <classpath>
                <path refid="test.class.path"/>
                <path refid="java.class.path"/>
                <path refid="compile.class.path"/>
                <path refid="test.compile.class.path"/>
            </classpath>
            
            <batchtest fork="yes">
                <fileset dir="${test.build.dir}" includes="**/TestDataCache*.class" excludes="**/Test*er.class"/>
            </batchtest>
        </junit>
    </target>

    <target name="regress.store" depends="test.compile" description="-- regress DataStore for memory/mapped/channel (30 minutes per test)">
        <junit maxmemory="16G">
            <jvmarg value="-Dtest.idStart=0"/>
            <jvmarg value="-Dtest.idCount=5000000"/>
            <jvmarg value="-Dtest.segFileSizeMB=256"/>
            <jvmarg value="-Dtest.runTimeSeconds=1800"/>
            <jvmarg value="-Dtest.dir=${test.dir}"/>
            <jvmarg value="-Dtest.output.dir=${test.dir}/output"/>
            <formatter type="brief" usefile="false"/>
            
            <classpath>
                <path refid="test.class.path"/>
                <path refid="java.class.path"/>
                <path refid="compile.class.path"/>
                <path refid="test.compile.class.path"/>
            </classpath>
            
            <batchtest fork="yes">
                <fileset dir="${test.build.dir}" includes="**/Test*Store*.class" excludes="**/Test*er.class"/>
            </batchtest>
        </junit>
    </target>

    <target name="test.quick" description="-- run a quick test, default -Dtests.to.run=TestDataCache" depends="test.compile">
        <junit maxmemory="4G">
            <jvmarg value="-Dtest.idStart=0"/>
            <jvmarg value="-Dtest.idCount=500000"/>
            <jvmarg value="-Dtest.segFileSizeMB=128"/>
            <jvmarg value="-Dtest.runTimeSeconds=60"/>
            <jvmarg value="-Dtest.dir=${test.dir}"/>
            <jvmarg value="-Dtest.output.dir=${test.dir}/output"/>
            <formatter type="brief" usefile="false"/>
            
            <classpath>
                <path refid="test.class.path"/>
                <path refid="java.class.path"/>
                <path refid="compile.class.path"/>
                <path refid="test.compile.class.path"/>
            </classpath>
            
            <batchtest fork="yes">
                <fileset dir="${test.build.dir}" includes="**/${tests.to.run}.class" excludes="**/Test*er.class"/>
            </batchtest>
        </junit>
    </target>
    
    <target name="test.loggc" description="-- run GC test (5 hours), default -Dtests.to.run=TestDataCache" depends="test.compile">
        <junit maxmemory="16G">
            <jvmarg value="-Xloggc:${logs.dir}/krati.gc"/>
            <jvmarg value="-XX:+PrintGCDetails"/>
            <jvmarg value="-Dtest.idStart=0"/>
            <jvmarg value="-Dtest.idCount=5000000"/>
            <jvmarg value="-Dtest.segFileSizeMB=256"/>
            <jvmarg value="-Dtest.runTimeSeconds=18000"/>
            <jvmarg value="-Dtest.dir=${test.dir}"/>
            <jvmarg value="-Dtest.output.dir=${test.dir}/output"/>
            <formatter type="brief" usefile="false"/>
            
            <classpath>
                <path refid="test.class.path"/>
                <path refid="java.class.path"/>
                <path refid="compile.class.path"/>
                <path refid="test.compile.class.path"/>
            </classpath>
            
            <batchtest fork="yes">
                <fileset dir="${test.build.dir}" includes="**/${tests.to.run}.class" excludes="**/Test*er.class"/>
            </batchtest>
        </junit>
    </target>

    <target name="main" depends="clean,jar">
    </target>
</project>
